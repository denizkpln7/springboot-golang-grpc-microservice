version: "3.5"

services:

  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: deniz
      POSTGRES_DB: blog
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring


#  zipkin:
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#    networks:
#      - spring
#
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
#    container_name: elasticsearch_springboot
#    environment:
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "discovery.type=single-node"
#      - xpack.security.enabled=false
#    ports:
#      - "9200:9200"
#    volumes:
#      - elasticsearch_data:/usr/share/elasticsearch/data
#    networks:
#      - spring
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.3.3
#    container_name: kibana_springboot
#    ports:
#      - "5601:5601"
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
#    depends_on:
#      - elasticsearch
#    networks:
#      - spring
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:8.3.3
#    container_name: logstash_springboot
#    volumes:
#      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
#    ports:
#      - "5044:5044"
#      - "5000:5000/tcp"
#      - "5000:5000/udp"
#      - "9600:9600"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - spring
#    depends_on:
#      - elasticsearch
#
#
#  prometheus:
#    image: prom/prometheus:v2.37.1
#    container_name: prometheus
#    restart: always
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    networks:
#      - spring
#
#  grafana:
#    image: grafana/grafana-oss:8.5.2
#    container_name: grafana
#    restart: always
#    ports:
#      - "3000:3000"
#    links:
#      - prometheus:prometheus
#    volumes:
#      - ./grafana:/var/lib/grafana
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=password
#    networks:
#      - spring

volumes:
  data-postgres:
    name: data-postgres
#  elasticsearch_data:
#    driver: local

networks:
  spring:
    name: spring